
note: LOOK AT THIS FIRST: 

STATE OF THE UNION: 

For Olive Garden (places.displayName.text) 
It has several types like: restaurant, italian_restaurant, 


Zupas primary type is 'restaurant'
Cafe Rio primary type is 'mexican_restaurant' 
Olive Garden primary type is 'italian_restaurant'

! What happens when I change the radus? 

Now zoom in and see what you can see. 

*TEST UPS: 
* 1) It pulls locations around me from the Google Maps API. 
* 2) It pulls the restaurants
* 3) It pulls the menu items 


How can you customize? 

By how far away (radius) 




What are the parameters? Look in your documents. 



* MY THOUGHTS: 

* Marker needs: 
* - key
* - coordinate
* - title
* - description
* - pinColor
* ........... but basically just the coordinates. 



The tech stack for our app 
*- Google Maps for the map 
* Google Places API for locating nearby restaurants
* Grok AI || Yelp API for accurate menu data. 


DONE: Make sure that you have a Google Places API key. WORKS. It's in the .env file. 
DONE: Try calling Nearby Search from Postman. WORKS. 

DONE: Now that you've got the thing enabled, you can hit the endpoint with your API key. 


DONE: What data are the cards expecting? 

STATE OF THE UNION; 

It is finding all of the things within 5 miles, according to the API. 

Name 
Distance 
Rating 
address
latitude 
longitude 

DONE: How are the pizza places rendered in the frontend? 


Takes the list of pizza places and maps them onto Markers with parameters on the frontend. Little components. 


As long as we give it JSON or something that it can easily map into the frontend, it doesn't matter how we get those locations on the backend. 

















STATE OF THE UNION: 

Correct: 
It finds and labels the user 
It finds places near the user (somewhat)

Defects: 
It zooms in on San Francisco even when it correctly places the blue dot on the user
Increase the accuracy through prompt engineering. 



```
[Component Mounts] (index.tsx)
      |
      v
 [useEffect runs] (usePizzaPlaces.ts)
      |
      v
[Get Permission & Location] (useEffect in usePizzaPlaces.ts)
      |
      v
[Reverse Geocode & Log] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchPizzaPlaces called] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchNearbyPizzaPlaces called] (PizzaService.ts)
      |
      v
Actually calls Grok to get the pizza places using the prompts from prompts.ts
      |
      v
[Pizza Places State Updated]
      |
      v
Loads in index.tsx
      |
      v
```



# STATE OF THE UNION 2025-05-03 22:44:32

DONE: Run the app on your Android emulator. 

STATE OF THE UNION: 
It was that my tokens were out, so I had to buy more. After that, the requests started working. 


TODO: Make it use the Google Maps API. 



*TEST UPS: 
* 1) It pulls locations around me from the Google Maps API. 
* 2) It pulls the restaurants
* 3) It pulls the menu items 

TODO: Look at Google Maps API. 


* MY THOUGHTS: 


* Ok, I was looking at the wrong thing. Markers are things that go onto the map, with a key, coordinate, etc. 

* Then it takes the places and puts it into the PizzaPlacesList to map into cards. 

* So, we can just have it pull from another source and give JSON and we'll be fine. 

* Marker needs: 
* - key
* - coordinate
* - title
* - description
* - pinColor
* ........... but basically just the coordinates. 



The tech stack for our app 
*- Google Maps for the map 
* Google Places API for locating nearby restaurants
* Grok AI || Yelp API for accurate menu data. 


TODO: Make sure that you have a Google Places API key
TODO: Try calling Nearby Search from Postman. 

TODO: Now that you've got the thing enabled, you can hit the endpoint with your API key. 
!Try it with Postman first. 




DONE: How are the pizza places rendered in the frontend? 


Takes the list of pizza places and maps them onto Markers with parameters on the frontend. Little components. 


As long as we give it JSON or something that it can easily map into the frontend, it doesn't matter how we get those locations on the backend. 

















STATE OF THE UNION: 

Correct: 
It finds and labels the user 
It finds places near the user (somewhat)

Defects: 
It zooms in on San Francisco even when it correctly places the blue dot on the user
Increase the accuracy through prompt engineering. 



```
[Component Mounts] (index.tsx)
      |
      v
 [useEffect runs] (usePizzaPlaces.ts)
      |
      v
[Get Permission & Location] (useEffect in usePizzaPlaces.ts)
      |
      v
[Reverse Geocode & Log] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchPizzaPlaces called] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchNearbyPizzaPlaces called] (PizzaService.ts)
      |
      v
Actually calls Grok to get the pizza places using the prompts from prompts.ts
      |
      v
[Pizza Places State Updated]
      |
      v
Loads in index.tsx
      |
      v

```



# TODAY 2025-04-25 09:51:40

TODO: Do a state of the union. 

State of the union: It now shows a more accurate spot for your own location. 

TODO: Use a third party API to get our actual street location instead of latitude and longitude. 



# APP MAP 

Entry Point: _layout.tsx 
-> 
(tabs) / index.tsx
-> 
index.tsx
usePizzaPlaces hook. 
It's a useEffect that runs on mount. 
pizzaService.ts
buildUserPrompt (prompts.ts) and SYSTEM_PROMPT


returns a MapView
-> 
shows user location 

Maps all of the pizza places onto the map. 

Shows a list of all of the pizza places in a cute little list. 



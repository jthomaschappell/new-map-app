# STATE OF THE UNION 2025-05-03 22:44:32

DONE: Run the app on your Android emulator. 

STATE OF THE UNION: 
It was that my tokens were out, so I had to buy more. After that, the requests started working. 


TODO: Commit this and mark it as buildable-prompt that can pull up locations for pizza places, trampoline parks, anything. 





STATE OF THE UNION: 

Correct: 
It finds and labels the user 
It finds places near the user (somewhat)

Defects: 
It zooms in on San Francisco even when it correctly places the blue dot on the user
Increase the accuracy through prompt engineering. 



```
[Component Mounts] (index.tsx)
      |
      v
 [useEffect runs] (usePizzaPlaces.ts)
      |
      v
[Get Permission & Location] (useEffect in usePizzaPlaces.ts)
      |
      v
[Reverse Geocode & Log] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchPizzaPlaces called] (useEffect in usePizzaPlaces.ts)
      |
      v
[fetchNearbyPizzaPlaces called] (PizzaService.ts)
      |
      v
Actually calls Grok to get the pizza places using the prompts from prompts.ts
      |
      v
[Pizza Places State Updated]
      |
      v
Loads in index.tsx
      |
      v
[User triggers refreshPizzaPlaces]
      |
      v
[fetchPizzaPlaces called again]
```



# TODAY 2025-04-25 09:51:40

TODO: Do a state of the union. 

State of the union: It now shows a more accurate spot for your own location. 

TODO: Use a third party API to get our actual street location instead of latitude and longitude. 



# APP MAP 

Entry Point: _layout.tsx 
-> 
(tabs) / index.tsx
-> 
index.tsx
usePizzaPlaces hook. 
It's a useEffect that runs on mount. 
pizzaService.ts
buildUserPrompt (prompts.ts) and SYSTEM_PROMPT


returns a MapView
-> 
shows user location 

Maps all of the pizza places onto the map. 

Shows a list of all of the pizza places in a cute little list. 


